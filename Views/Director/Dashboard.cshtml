@{
    ViewData["Title"] = "Tổng quan doanh thu hệ thống";
    var chartData = ViewBag.RevenueChart as IEnumerable<dynamic>;
    var topStores = ViewBag.TopStores as IEnumerable<dynamic>;
    var monthlyStores = ViewBag.MonthlyStores as IEnumerable<dynamic>;
}

<style>
    .db-dir{
        margin: 80px auto 0px;
        padding-bottom: 40px;
    }

    @@media (max-width: 768px) {
        .res-mb{
            display:flex;
        }
    }
</style>

<div class="container py-4 fade-in db-dir">
    <h2 class="text-center fw-bold mb-4 text-dark">
        <i class="bi bi-bar-chart-fill text-warning"></i> Tổng quan doanh thu chuỗi cửa hàng
    </h2>

    <!-- KPI Summary -->
    <div class="row g-3 text-center mb-4">
        <div class="col-md-3">
            <div class="card p-3 shadow-sm bg-gold-gradient animate-hover">
                <h6 class="text-uppercase fw-semibold text-dark">Tổng chi nhánh</h6>
                <h3 class="fw-bold">@ViewBag.TotalStores</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card p-3 shadow-sm bg-green-gradient animate-hover">
                <h6 class="text-uppercase fw-semibold text-white">Tổng nhân viên</h6>
                <h3 class="fw-bold text-white">@ViewBag.TotalEmployees</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card p-3 shadow-sm bg-light animate-hover border-start border-4 border-success">
                <h6 class="text-uppercase fw-semibold text-success">Tổng doanh thu</h6>
                <h3 class="fw-bold text-success">@String.Format("{0:N0}", ViewBag.TotalRevenue) ₫</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card p-3 shadow-sm bg-light animate-hover border-start border-4 border-warning">
                <h6 class="text-uppercase fw-semibold text-warning">Tổng đơn hàng</h6>
                <h3 class="fw-bold text-warning">@ViewBag.TotalOrders</h3>
            </div>
        </div>
    </div>

    <!-- Navigation -->
    <div class="text-center mt-3 mb-5 res-mb">
        <a href="@Url.Action("StoresReport", "Director")" class="btn border-2 border-warning mx-2 px-4 py-2 rounded-pill">
            <i class="bi bi-shop me-1"></i> Xem chi tiết chi nhánh
        </a>
        <a href="@Url.Action("Analytics", "Director")" class="btn btn-outline-success mx-2 px-4 py-2 rounded-pill">
            <i class="bi bi-graph-up-arrow me-1"></i> Phân tích chuỗi cửa hàng
        </a>
    </div>

    <div class="row g-4">
        <!-- Revenue Line Chart -->
        <div class="col-lg-6">
            <div class="card p-4 shadow-sm animate-hover">
                <h5 class="fw-bold text-center mb-3 text-dark">
                    <i class="bi bi-graph-up text-success"></i> Doanh thu 6 tháng gần nhất
                </h5>
                <canvas id="revenueChart" style="max-height:300px;"></canvas>
            </div>
        </div>

        <!-- Top Stores -->
        <div class="col-lg-6">
            <div class="card p-4 shadow-sm animate-hover">
                <h5 class="fw-bold text-center text-dark mb-3">
                    <i class="bi bi-trophy text-warning"></i> Top 5 chi nhánh doanh thu cao nhất
                </h5>
                <table class="table table-hover table-borderless align-middle mb-0">
                    <thead class="table-light border-bottom">
                        <tr>
                            <th>Chi nhánh</th>
                            <th class="text-end">Doanh thu (₫)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in topStores)
                        {
                            <tr>
                                <td>@s.StoreName</td>
                                <td class="text-end fw-semibold text-success">@String.Format("{0:N0}", s.Revenue)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Monthly Store Revenue -->
    <div class="card p-4 shadow-sm mt-5 animate-hover">
        <h5 class="fw-bold text-center mb-3 text-dark">
            <i class="bi bi-building text-primary"></i> Doanh thu các cửa hàng trong tháng này
        </h5>
        <canvas id="monthlyStoreChart" style="max-height:300px;"></canvas>

        <div class="table-responsive mt-4">
            <table class="table table-striped table-sm text-center align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Ký hiệu</th>
                        <th>Chi nhánh</th>
                        <th>Doanh thu (₫)</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int i = 1;
                        foreach (var s in monthlyStores)
                        {
                            <tr>
                                <td><span class="badge bg-secondary">Cột @i</span></td>
                                <td>@s.StoreName</td>
                                <td class="fw-semibold">@String.Format("{0:N0}", s.Revenue)</td>
                            </tr>
                            i++;
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // === Chart: Revenue 6 months ===
        const ctx = document.getElementById("revenueChart");
        new Chart(ctx, {
            type: "line",
            data: {
                labels: @Html.Raw(Json.Serialize(chartData.Select(x => x.Period))),
                datasets: [{
                    label: "Doanh thu (₫)",
                    data: @Html.Raw(Json.Serialize(chartData.Select(x => x.Revenue))),
                    borderColor: "#28a745",
                    backgroundColor: "rgba(40,167,69,0.1)",
                    fill: true,
                    tension: 0.3,
                    borderWidth: 2,
                    pointBackgroundColor: "#FFD700"
                }]
            },
            options: {
                plugins: {
                    legend: { display: false },
                    tooltip: { callbacks: { label: ctx => ctx.formattedValue + " ₫" } }
                },
                scales: {
                    y: { beginAtZero: true, ticks: { callback: val => val.toLocaleString() } }
                }
            }
        });

        // === Chart: Monthly Store Revenue ===
        const ctx2 = document.getElementById("monthlyStoreChart");
        new Chart(ctx2, {
            type: "bar",
            data: {
                labels: @Html.Raw(Json.Serialize(monthlyStores.Select((x, i) => "Cột " + (i + 1)))),
                datasets: [{
                    label: "Doanh thu (₫)",
                    data: @Html.Raw(Json.Serialize(monthlyStores.Select(x => x.Revenue))),
                    backgroundColor: "rgba(255,215,0,0.8)",
                    borderColor: "#FFD700",
                    borderWidth: 1
                }]
            },
            options: {
                plugins: {
                    legend: { display: false },
                    tooltip: { callbacks: { label: ctx => ctx.formattedValue + " ₫" } }
                },
                scales: {
                    x: { ticks: { autoSkip: false } },
                    y: { beginAtZero: true, ticks: { callback: val => val.toLocaleString() } }
                }
            }
        });
    </script>
}
