@model dynamic
@{
    ViewData["Title"] = "📊 Phân tích toàn cảnh hệ thống";
}
<style>
    .an-dir{
        padding: 0px 75px;
    }
</style>
<div class="container-fluid an-dir">
    <a href="/Director/Dashboard" class="btn btn-outline-gold mb-4 rounded-pill px-3 fw-semibold">
        ← Quay lại trang tổng quan
    </a>
    <h2 class="text-center mb-4 fw-bold text-dark">📈 Phân tích toàn diện chuỗi hoạt động</h2>

    <!-- ====== Dòng 1: Doanh số & Tồn kho ====== -->
    <div class="row g-4 mb-4">
        <div class="col-lg-6">
            <div class="card border-0 shadow-lg rounded-4 h-100" style="border-radius: 0;">
                <div class="card-header text-white fw-semibold rounded-top-4"
                     style="background: linear-gradient(135deg, #004e92, #000428)">
                    💰 Doanh số 6 tháng gần nhất
                </div>
                <div class="card-body p-3">
                    <div class="table-responsive">
                        <table class="table table-hover table-sm align-middle text-center mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Tháng</th>
                                    <th>Doanh thu (₫)</th>
                                    <th>Đơn hàng</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var m in Model.MonthlyRevenue)
                                {
                                    <tr>
                                        <td>@m.Month/@m.Year</td>
                                        <td class="fw-bold text-success">@String.Format("{0:N0}", m.TotalRevenue)</td>
                                        <td>@m.TotalOrders</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card border-0 shadow-lg rounded-4 h-100">
                <div class="card-header fw-semibold text-dark rounded-top-4 bg-warning">
                    📦 Tồn kho tháng @DateTime.Now.Month/@DateTime.Now.Year
                </div>
                <div class="card-body bg-light text-center rounded-bottom-4">
                    <div class="row justify-content-center">
                        <div class="col-6 col-md-3 mb-2">
                            <p class="text-muted mb-1">Đầu kỳ</p>
                            <h6 class="fw-bold">@Model.Inventory.TotalBegin</h6>
                        </div>
                        <div class="col-6 col-md-3 mb-2">
                            <p class="text-muted mb-1">Nhập</p>
                            <h6 class="fw-bold text-primary">@Model.Inventory.TotalImported</h6>
                        </div>
                        <div class="col-6 col-md-3 mb-2">
                            <p class="text-muted mb-1">Bán</p>
                            <h6 class="fw-bold text-danger">@Model.Inventory.TotalSold</h6>
                        </div>
                        <div class="col-6 col-md-3 mb-2">
                            <p class="text-muted mb-1">Cuối kỳ</p>
                            <h6 class="fw-bold text-success">@Model.Inventory.TotalEnd</h6>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ====== Dòng 2: Dòng tiền & Công nợ ====== -->
    <div class="row g-4 mb-4">
        <div class="col-lg-6">
            <div class="card border-0 shadow-lg rounded-4 h-100">
                <div class="card-header bg-success text-white fw-semibold rounded-top-4">
                    💵 Dòng tiền tháng @DateTime.Now.Month/@DateTime.Now.Year
                </div>
                <div class="card-body text-center bg-light">
                    <p class="mb-1">
                        Doanh thu:
                        <span class="fw-bold text-success">@String.Format("{0:N0}", Model.CashFlow.Revenue) ₫</span>
                    </p>
                    <p class="mb-1">
                        Chi phí:
                        <span class="fw-bold text-danger">@String.Format("{0:N0}", Model.CashFlow.Cost) ₫</span>
                    </p>
                    <h5 class="mt-3 fw-bold">
                        👉 Dòng tiền ròng:
                        <span class="@(Model.CashFlow.Net >= 0 ? "text-success" : "text-danger")">
                            @String.Format("{0:N0}", Model.CashFlow.Net) ₫
                        </span>
                    </h5>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card border-0 shadow-lg rounded-4 h-100">
                <div class="card-header bg-danger text-white fw-semibold rounded-top-4">
                    📑 Công nợ khách hàng
                </div>
                <div class="card-body text-center bg-light d-flex flex-column justify-content-center">
                    <h3 class="fw-bold text-danger mb-2">@String.Format("{0:N0}", Model.Receivables) ₫</h3>
                    <p class="text-muted mb-0">(Tổng giá trị đơn hàng chưa thanh toán)</p>
                </div>
            </div>
        </div>
    </div>

    <!-- ====== Dòng 3: Khuyến mãi & Đầu tư ====== -->
    <div class="row g-4 mb-4">
        <div class="col-lg-6">
            <div class="card border-0 shadow-lg rounded-4 h-100">
                <div class="card-header bg-info text-white fw-semibold rounded-top-4">
                    🎉 Hiệu quả khuyến mãi
                </div>
                <div class="card-body text-center bg-light">
                    <p>
                        Doanh thu từ khuyến mãi:
                        <span class="fw-bold text-primary">@String.Format("{0:N0}", Model.Promotion.PromoRevenue) ₫</span>
                    </p>
                    <p>
                        Tỷ lệ đóng góp:
                        <span class="fw-bold @(Model.Promotion.Effectiveness >= 10 ? "text-success" : "text-warning")">
                            @Model.Promotion.Effectiveness.ToString("F2")%
                        </span>
                    </p>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card border-0 shadow-lg rounded-4 h-100">
                <div class="card-header bg-secondary text-white fw-semibold rounded-top-4">
                    🏗️ Các khoản đầu tư gần đây
                </div>
                <div class="card-body p-0 bg-white rounded-bottom-4">
                    <div class="table-responsive">
                        <table class="table table-striped table-sm align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Tháng/Năm</th>
                                    <th>Loại chi phí</th>
                                    <th>Số tiền (₫)</th>
                                    <th>Ghi chú</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var inv in Model.Investments)
                                {
                                    <tr>
                                        <td>@inv.CostMonth/@inv.CostYear</td>
                                        <td>@inv.CostType</td>
                                        <td class="text-danger fw-bold">@String.Format("{0:N0}", inv.CostAmount)</td>
                                        <td>@inv.Note</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ====== Dòng 4: Khách hàng ====== -->
    <div class="row g-4 mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-lg rounded-4 h-100">
                <div class="card-header bg-dark text-white fw-semibold rounded-top-4">
                    👥 Phân tích khách hàng
                </div>
                <div class="card-body bg-light text-center">
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <h4 class="fw-bold">@Model.Customers.TotalCustomers</h4>
                            <p class="text-muted mb-0">Tổng khách hàng</p>
                        </div>
                        <div class="col-md-3 mb-3">
                            <h4 class="fw-bold text-primary">@Model.Customers.NewCustomers</h4>
                            <p class="text-muted mb-0">Khách hàng mới tháng này</p>
                        </div>
                        <div class="col-md-3 mb-3">
                            <h4 class="fw-bold text-success">@Model.Customers.RetentionRate.ToString("F2")%</h4>
                            <p class="text-muted mb-0">Tỉ lệ giữ chân</p>
                        </div>
                        <div class="col-md-3 mb-3">
                            <h4 class="fw-bold text-warning">@Model.Customers.AvgFeedback.ToString("F1")/5</h4>
                            <p class="text-muted mb-0">Đánh giá TB (@Model.Customers.TotalFeedbacks lượt)</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ====== Dòng 5: Bản đồ khách hàng ====== -->
    <div class="row g-4 mb-5">
        <div class="col-12">
            <div class="card border-0 shadow-lg rounded-4">
                <div class="card-header text-white fw-semibold rounded-top-4"
                     style="background: linear-gradient(135deg, #0072ff, #00c6ff);">
                    🗺️ Bản đồ phân bổ khách hàng
                </div>
                <div class="card-body p-0 bg-white rounded-bottom-4">
                    <div id="customerMap" style="height: 500px; width: 100%;"></div>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
        <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

        <script>
            const map = L.map('customerMap');
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>'
            }).addTo(map);

            const customers = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.CustomerLocations));
            const stores = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.StoreLocations));

            const markers = [];
            const grouped = {};

            customers.forEach(c => {
                if (c.Latitude && c.Longitude) {
                    const key = c.Latitude + "," + c.Longitude;
                    if (!grouped[key]) grouped[key] = [];
                    grouped[key].push(c);
                }
            });

            Object.keys(grouped).forEach(key => {
                const [lat, lng] = key.split(",").map(parseFloat);
                const group = grouped[key];
                const count = group.length;

                if (count > 1) {
                    const icon = L.divIcon({
                        className: "custom-cluster",
                        html: `<div style="background:#007bff;color:white;border-radius:50%;
                            width:32px;height:32px;line-height:32px;text-align:center;font-weight:bold;">
                            ${count}</div>`,
                        iconSize: [32, 32]
                    });
                    markers.push(L.marker([lat, lng], { icon })
                        .addTo(map)
                        .bindPopup(group.map(c => `<b>${c.FullName}</b> (ID:${c.IdCustomer})`).join("<br/>")));
                } else {
                    const c = group[0];
                    markers.push(L.circleMarker([lat, lng], {
                        radius: 6, color: "#007bff", fillColor: "#007bff", fillOpacity: 0.8
                    }).addTo(map)
                        .bindPopup(`<b>${c.FullName}</b><br/>ID: ${c.IdCustomer}`));
                }
            });

            stores.forEach(s => {
                if (s.Latitude && s.Longitude) {
                    const storeMarker = L.marker([s.Latitude, s.Longitude], {
                        icon: L.icon({
                            iconUrl: "https://cdn-icons-png.flaticon.com/512/684/684908.png",
                            iconSize: [28, 28], iconAnchor: [14, 28]
                        })
                    }).addTo(map)
                        .bindPopup(`<b>🏪 ${s.StoreName}</b><br/>📍 ${s.Address}`);
                    markers.push(storeMarker);
                }
            });

            if (markers.length > 0) {
                const groupLayer = L.featureGroup(markers);
                map.fitBounds(groupLayer.getBounds().pad(0.2));
            } else {
                map.setView([15.8700, 100.9925], 5);
            }
        </script>
    }
</div>
